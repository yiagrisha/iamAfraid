html {
  scroll-behavior: smooth;
}

@font-face {
   font-family: 'Montserrat';
   src: url(Materials/Montserrat-Regular.ttf);
}
@font-face {
   font-family: 'Amarante';
   src: url(Materials/Amarante/Amarante-Regular.ttf);
}
@font-face {
   font-family: 'Press_Start_2P';
   src: url(Materials/Press_Start_2P/PressStart2P-Regular.ttf);
}
@font-face {
   font-family: 'NotoSansJP';
   src: url(Materials/NotoSansJP-VariableFont_wght.ttf);
}
@font-face {
   font-family: 'Faculty_Glyphic';
   src: url(Materials/Faculty_Glyphic/FacultyGlyphic-Regular.ttf);
}

* {
   box-sizing: border-box;
}

body {
   margin: 0;
   padding: 0;
   height: 100vh;

   overflow: hidden;

   font-family: 'Montserrat';
}

.hidden {
   position: absolute;
   left: -1000px;
}

#preview {
   position: absolute;
   z-index: -100;

   width: 100%;
   height: 90vh;

   display: flex;
   justify-content: center;
   align-items: center;

   #container {
      width: 80%;
      max-height: 100%;

      #text{
         display: inline-block;
         white-space: pre;
      }
   }
}

#canvas {
   width: 100%;
   height: 100vh;
}

#controls {
   font-size: 16px;

   position: absolute;
   bottom: 0;
   left: 0;
   z-index: 10;
   
   display: flex;
   flex-direction: column;
   gap: 0.3em;


   @media screen and (max-width: 768px) {
    width: 80%;
   }   
}

#canvas-switch {
   background-color: rgb(0, 0, 0);
   border-right: 1px solid white;
   border-bottom: 1px solid white;
   border-radius: 0 0 0.3em 0;
   width: 10em;
   
   padding: 0.6em;

   aside {
      display: flex;
      flex-direction: column;
      gap: 5px;
   }

   .select {
      width: 100%;
      height: 2.7em;

      cursor: pointer;
      position: relative;
      transition: 0.3s;

      color: rgb(0, 0, 0);
      
      .selected {
         background-color: #ffffff;
      
         padding: 0.3em 0.2em 0.3em 0.7em;
         margin-bottom: 0.1em;
         border-radius: 0.3em;
         
         z-index: 1000000;
         font-size: 1em;
      
         position: relative;
         display: flex;
         align-items: center;
         justify-content: space-between;
      
         .arrow {
            position: relative;
            right: 0;
      
            height: 1em;
            width: 1.5em;
      
            fill: rgb(0, 0, 0);
            z-index: 1000;
      
            transform: rotate(-90deg);
            transition: 0.3s;
         }
         }
      
         .canvas-options {
         display: flex;
         flex-direction: column;
         
         border-radius: 0.3em;
         padding: 0.3em;
         
         background-color: #fad818;
         position: relative;
         
         opacity: 0;
         transition: opacity 0 ease;
         
         top: -150px;
         left: -1000px;
         z-index: 1000000;
         }
      
      }




      .select:hover > .canvas-options {
      opacity: 1;
      top: 0;
      left: 0;
      transition: opacity 0.5s ease;
      }

      .select:hover > .selected .arrow {
      transform: rotate(0deg);
      }

      .option {
         font-size: 0.8em;

         border-radius: 0.4em;
         padding: 0.2em 0 0.2em 0.6em;
         transition: 0.3s;

         background-color: #ffffff;

         width: 100%;
      }
      .option:hover {
      background-color: rgb(173, 173, 173);
      }

      .canvas-options input[type="radio"] {
      display: none;
      }

      .canvas-options label {
      display: inline-block;
      }
      .canvas-options label::before {
      content: attr(data-txt);
      }

      .canvas-options input[type="radio"]:checked + label {
      display: none;
      }

      .canvas-options input[type="radio"]#all:checked + label {
      display: none;
      }

      .select:has(.canvas-options input[type="radio"]#all:checked) .selected::before {
      content: attr(data-default);
      }
      .select:has(.canvas-options input[type="radio"]#canvas-option-1:checked) .selected::before {
      content: attr(data-one);
      }
      .select:has(.canvas-options input[type="radio"]#canvas-option-2:checked) .selected::before {
      content: attr(data-two);
      }
      
}
















#tools {
   display: flex;
   flex-direction: column;
   gap: 1.5em;

   background-color: rgb(0, 0, 0);
   border-top: 1px solid white;;
   border-right: 1px solid white;
   border-radius: 0 0.3em 0 0;
   width: 10em;
   
   padding: 0.6em 0.6em 1.2em 0.6em;

   aside {
      display: flex;
      flex-direction: column;
      gap: 0.3em;
   }

   @media screen and (max-width: 768px) {
    width: 100%;

    border-top: 1px solid white;;
    border-bottom: none;
   }
}

#text-input {
   display: flex;
   flex-direction: column;
   width: 100%;
   z-index: 200000;

   textarea {
      border: none;
      border-radius: 0.3em;
      white-space: pre;
      
      width: 100%;
      max-width: 100%;
      height: 5em;
      min-height: 3em;
      
      font-family: inherit;
      font-size: 1em;
      box-sizing: border-box;
      
      padding: 0.6em 0.7em ;

      @media screen and (max-width: 768px) {
         height: 4em;
      }
   } 
}

.slider {
   width: 100%;
   
   display: flex;
   align-items: baseline;
   justify-content: space-between;
   gap: 0.3em;

   padding: 0;
   
   span {
      font-size: 0.9em;
      align-content: left;
      text-align: end;
      width: 7em;

      color: #ffffff;
   }
   
   /* https://www.smashingmagazine.com/2021/12/create-custom-range-input-consistent-browsers/ */
   
   /********** Range Input Styles **********/
   /*Range Reset*/
   input[type="range"] {
      -webkit-appearance: none;
      appearance: none;
      background: transparent;
      cursor: pointer;
      width: 100%;

      padding-bottom: 0.2em;
   }
   
   /* Removes default focus */
   input[type="range"]:focus {
      outline: none;
   }
   
   /***** Chrome, Safari, Opera and Edge Chromium styles *****/
   /* slider track */
   input[type="range"]::-webkit-slider-runnable-track {
      background-color: rgb(255, 255, 255);
      border-radius: 1px;
      height: 1px;  
   }
   
   /* slider thumb */
   input[type="range"]::-webkit-slider-thumb {
      -webkit-appearance: none; /* Override default look */
      appearance: none;
      
      /*custom styles*/
      background-color: white;
      border: 2px solid black;
      height: 1.2em;
      width: 1.2em;
      border-radius: 50%;
      
      transform: translateY(-43%)
   }

   @media screen and (max-width: 768px) {
      width: 100%;
      gap: 0.5em;
    
      span {
         font-size: 0.9em;
         
      }
   }
}


.select {
  width: 100%;
  height: 2em;

  cursor: pointer;
  position: relative;
  transition: 0.3s;

  color: rgb(0, 0, 0);
  
  .selected {
    background-color: #ffffff;
  
    padding: 0.3em 0.2em 0.3em 0.7em;
    margin-bottom: 0.2em;
    border-radius: 0.3em;
    
    z-index: 100000;
    font-size: 1em;
  
    position: relative;
    display: flex;
    align-items: center;
    justify-content: space-between;
  
    .arrow {
      position: relative;
      right: 0;
  
      height: 1em;
      width: 1.5em;
  
      fill: rgb(0, 0, 0);
      z-index: 1000;
  
      transform: rotate(-90deg);
      transition: 0.3s;
    }
   }
  
   .options {
     display: flex;
     flex-direction: column;
   
     border-radius: 0.3em;
     padding: 0.3em;
   
     background-color: #ffffff;
     position: relative;
   
     opacity: 0;
     transition: opacity 0 ease;
   
     top: -150px;
     left: -1000px;
     z-index: 100000;
   }
  
}




.select:hover > .options {
  opacity: 1;
  top: 0;
  left: 0;
  transition: opacity 0.5s ease;
}

.select:hover > .selected .arrow {
  transform: rotate(0deg);
}

.option {
   font-size: 0.8em;

   border-radius: 0.4em;
   padding: 0.2em 0 0.2em 0.6em;
   transition: 0.3s;

   background-color: #ffffff;

   width: 100%;
}
.option:hover {
  background-color: rgb(173, 173, 173);
}

.options input[type="radio"] {
  display: none;
}

.options label {
  display: inline-block;
}
.options label::before {
  content: attr(data-txt);
}

.options input[type="radio"]:checked + label {
  display: none;
}

.options input[type="radio"]#all:checked + label {
  display: none;
}

.select:has(.options input[type="radio"]#all:checked) .selected::before {
  content: attr(data-default);
}
.select:has(.options input[type="radio"]#option-1:checked) .selected::before {
  content: attr(data-one);
}
.select:has(.options input[type="radio"]#option-2:checked) .selected::before {
  content: attr(data-two);
}
.select:has(.options input[type="radio"]#option-3:checked) .selected::before {
  content: attr(data-three);
}
.select:has(.options input[type="radio"]#option-4:checked) .selected::before {
  content: attr(data-four);
}
.select:has(.options input[type="radio"]#option-5:checked) .selected::before {
  content: attr(data-five);
}


.choosing {
   width: 100%;

   .radios {
      display: flex; 
      flex-wrap: wrap;
      
      .radio {
         width: 25%;
         display: flex;
         flex: 1 1 auto;
         align-items: center;
         justify-content: center;
         
         cursor: pointer;
         
         svg {
            width: 100%;
            
            fill: rgb(173, 173, 173);
            transition: all .15s ease;
         }
         
         input {
            display: none;
            
            &:checked + svg {
               fill: rgb(255, 255, 255);
            }
         }
      }
   }

   @media screen and (max-width: 768px) {

      .radios {
         .radio {
            svg {
               width: 55%;
            }
         }
      }
   }
}

#ZoomWaveTumblePunch {
   width: 100%;
   
   .radios {
      display: flex; 
      flex-wrap: wrap;
      gap: 6%;
      row-gap: 0.4em;
      
      .radio {
         width: 47%;
         display: flex;
         flex: 1 1 auto;
         align-items: center;
         justify-content: center;
         
         cursor: pointer;

         
         border-radius: 0.4em;
         padding: 0.3em 0.7em;
         
         svg {
            width: 70%;
            
            fill: rgb(173, 173, 173);
            transition: all .15s ease;
         }
         
         input {
            display: none;
            
            &:checked + svg {
               fill: rgb(0, 0, 0);
            }
         }

         &:has(input:checked) {
            background-color: white;
         }

         @media screen and (max-width: 768px) {
            width: 24%;
         }
      }

      @media screen and (max-width: 768px) {
         gap: 1%;
      }
   }
}